/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.7/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Jackson & HttpClient
    implementation 'com.fasterxml.jackson.core:jackson-databind:+'
    implementation 'org.apache.httpcomponents:httpclient:+'
    implementation platform('org.apache.logging.log4j:log4j-bom:2.24.0')
    implementation 'org.apache.logging.log4j:log4j-api:${log4j-api.version}'
    implementation 'org.apache.logging.log4j:log4j-core:${log4j-core.version}'



    // Assuming `log4j-bom` is added

    // The logging implementation (i.e., Log4j Core)
    runtimeOnly 'org.apache.logging.log4j:log4j-core'

        // Log4j JSON-encoding support
    runtimeOnly 'org.apache.logging.log4j:log4j-layout-template-json'


    // Use JUnit Jupiter for testing.
    //testImplementation libs.junit.jupiter

    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'

    //testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.masumera.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
        testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
}